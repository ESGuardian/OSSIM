# Author: esguardian, http://esguardian.ru, especialy for Maruad team, http://maruad.ru
# Version: 0.2
#
# Description:
#   This function should only be called when a date is in this format:
#   1 июня 2017 г. 10:33:01 (GMT+3:00)
#
# Time offset is ignored. The plugin timezone used.

#
# Usage:
#   date={:normalize_date_kasper_rus( $date_log )}
#

Start Function normalize_date_kasper_rus
# -*- coding: utf-8 -*-

from datetime import datetime

def normalize_date_kasper_rus( self, string = "" ):
    encoding = self.get('config','encoding')
    sdate=string.decode(encoding)
    monthes = {u"января":1, u"февраля":2, u"марта":3, u"апреля":4, u"мая":5, u"июня":6, u"июля":7, u"августа":8, u"сентября":9, u"октября":10, u"ноября":11, u"декабря":12}
    (sday,smonth,syear,smusor,stime,stzone) = sdate.split(' ')
    (s_hour,s_minute,s_second) = stime.split(':')
    date = datetime(year=int(syear), month=int(monthes[smonth]), day=int(sday), hour=int(s_hour), minute=int(s_minute), second=int(s_second)).isoformat(' ')

    return date

End Function

# Description:
#   This function should only be called when a string is in this format:
#   UDP от 10.128.1.6 на локальный порт 1434
#


#
# Usage:
#   src_ip={:get_ip_from_string( $string )}
#

Start Function get_ip_from_string
# -*- coding: utf-8 -*-

def get_ip_from_string( self, string = "" ):
    encoding = self.get('config','encoding')
    decoded_string=string.decode(encoding)
    for elem in decoded_string.split(' '):
        if "." in elem :
            return elem
    return u"0.0.0.0"

End Function

# Description:
#   This function especialy for Elecsnet instance of Kaspersky SC:
#   
#


#
# Usage:
#   src_ip={:get_ip_from_name( $hostname )}
#

Start Function get_ip_from_name
# -*- coding: utf-8 -*-

import socket
def get_ip_from_name( self, string = "" ):
    encoding = self.get('config','encoding')
    hostname=string.decode(encoding)
    try:
        ip = socket.gethostbyname(hostname.strip())
        return ip
    except:
        return '0.0.0.0'

End Function
